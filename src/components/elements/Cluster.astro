---
/**
 * Clusterコンポーネント
 *
 * 要素をグループ化して配置するためのコンテナコンポーネント
 * 配置位置や間隔を制御可能
 * gapプロパティは "rowGap columnGap" の形式での指定も可能 (例: "3 6")
 */

import BaseElement from "./base/BaseElement.astro";

interface Props {
	class?: string;
	Element?: keyof HTMLElementTagNameMap;
	align?: "start" | "center" | "end" | "stretch";
	justify?: "start" | "center" | "end" | "space-between" | "space-around";
	items?: "start" | "center" | "end" | "stretch";
	content?: "start" | "center" | "end";
	gap?: string;
	[key: string]: unknown;
}

const {
	class: className,
	Element = "div",
	align,
	justify,
	items,
	content,
	gap,
	...rest
} = Astro.props as Props;

// 位置指定クラスを生成
const alignClass = align ? `cluster--align-${align}` : "";
const justifyClass = justify ? `cluster--justify-${justify}` : "";
const contentClass = content ? `cluster--content-${content}` : "";

// 基本コンポーネントに渡すプロパティを準備
const baseProps = {
	componentClass: "cluster",
	class: [alignClass, justifyClass, contentClass, className]
		.filter(Boolean)
		.join(" "),
	Element,
	...rest,
};
---

<BaseElement gap={gap} {...baseProps}>
  <slot />
</BaseElement>

<style lang="scss">
  @use "../../styles/tools/mixin" as mix;

  @include mix.element-base("cluster") {
    display: flex;
    flex-wrap: wrap;
    gap: var(--cluster-gap, var(--space-m));

    // 二次元ギャップ処理用ミックスインを使用
    @include mix.two-dimensional-gap(
      "--cluster-gap",
      "--cluster-row-gap",
      "--cluster-column-gap"
    );

    &--align-start {
      align-items: flex-start;
    }

    &--align-center {
      align-items: center;
    }

    &--align-end {
      align-items: flex-end;
    }

    &--justify-start {
      justify-content: flex-start;
    }

    &--justify-center {
      justify-content: center;
    }

    &--justify-end {
      justify-content: flex-end;
    }

    &--justify-between {
      justify-content: space-between;
    }

    &--content-start {
      align-content: flex-start;
    }

    &--content-center {
      align-content: center;
    }

    &--content-end {
      align-content: flex-end;
    }
  }
</style>
