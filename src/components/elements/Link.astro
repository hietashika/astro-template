---
/**
 * Linkコンポーネント
 *
 * リンクを表示するためのコンポーネント
 * 縦横のレイアウトを切り替えることができる
 */

import BaseElement from "./base/BaseElement.astro";

interface Props {
	href: string;
	external?: boolean;
	disabled?: boolean;
	class?: string;
	size?: string;
	vertical?: boolean;
	horizontal?: boolean;
	padding?: string;
	[key: string]: unknown;
}

const {
	class: className,
	href,
	vertical,
	horizontal,
	...rest
} = Astro.props as Props;

const layoutClass = vertical
	? "link--vertical"
	: horizontal
		? "link--horizontal"
		: "link--horizontal";

const baseProps = {
	componentClass: "link",
	class: [layoutClass, className].filter(Boolean).join(" "),
	href,
	...rest,
};
---

<BaseElement Element="a" {...baseProps}>
  <slot />
</BaseElement>

<style lang="scss">
  @use "../../styles/tools/mixin" as mix;

  @include mix.element-base("link") {
    display: grid;

    // 16px 〜 18px
    @include mix.responsive-font-size(var(--font-size-m), var(--font-size-l));

    &--vertical {
      gap: var(--link-vertical-gap, var(--space-s));
      justify-items: center;

      @include mix.spacing-classes("--link-vertical-gap", "gap");
    }

    &--horizontal {
      grid-template-columns: auto 1fr;
      grid-auto-flow: column;
      gap: var(--link-horizontal-gap, var(--space-s));
      align-items: center;

      @include mix.spacing-classes("--link-horizontal-gap", "gap");
    }
  }
</style>
