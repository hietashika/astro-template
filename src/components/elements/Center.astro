---
/**
 * Centerコンポーネント
 *
 * コンテンツを中央に配置するためのコンテナコンポーネント
 * paddingを制御可能
 */
import BaseElement from "./base/BaseElement.astro";

interface Props {
  class?: string;
  Element?: keyof HTMLElementTagNameMap;
  max?: string;
  padding?: string;
  intrinsic?: boolean;
  style?: string;
  andText?: boolean;
  /**
   * その他の属性を許可
   */
  [key: string]: any;
}

const {
  class: className,
  Element = "div",
  max,
  padding,
  intrinsic,
  andText,
  ...rest
} = Astro.props as Props;

// 基本コンポーネントに渡すプロパティを準備
const baseProps = {
  componentClass: "center",
  class: [intrinsic ? "intrinsic" : "", andText ? "center__text" : "", className]
    .filter(Boolean)
    .join(" "),
  Element,
  padding,
  ...rest,
};
---

<BaseElement {...baseProps}>
  <slot />
</BaseElement>

<style lang="scss">
  @use "../../styles/tools/mixin" as mix;

  @include mix.element-base("center") {
    box-sizing: content-box;
    max-inline-size: var(--max-inline-size);
    margin-inline: auto;
    padding-inline: var(--center-padding, var(--space-m));

    // スペーシングクラスを生成
    @include mix.spacing-classes("--center-padding", "padding");

    // バリアント
    &.intrinsic {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    &.center__text {
      text-align: center;
    }
  }
</style>
