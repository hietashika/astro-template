---
/**
 * Centerコンポーネント
 *
 * コンテンツを中央に配置するためのコンテナコンポーネント
 * paddingを制御可能
 */
import BaseElement from "./base/BaseElement.astro";

interface Props {
	/**
	 * 中央寄せの方法
	 * @default "intrinsic"
	 */
	type?: "text" | "intrinsic";

	/**
	 * 最大幅
	 * @default "container"
	 */
	maxWidth?: string;

	/**
	 * 最小の左右パディング
	 * @default "1"
	 */
	gutter?: string;

	/**
	 * その他の属性を許可（型安全に）
	 */
	[key: string]: unknown;
}

const {
	class: className,
	Element = "div",
	max,
	padding,
	intrinsic,
	andText,
	...rest
} = Astro.props as Props;

// 基本コンポーネントに渡すプロパティを準備
const baseProps = {
	componentClass: "center",
	class: [
		intrinsic ? "intrinsic" : "",
		andText ? "center__text" : "",
		className,
	]
		.filter(Boolean)
		.join(" "),
	Element,
	padding,
	...rest,
};
---

<BaseElement {...baseProps}>
  <slot />
</BaseElement>

<style lang="scss">
  @use "../../styles/tools/mixin" as mix;

  @include mix.element-base("center") {
    box-sizing: content-box;
    max-inline-size: var(--max-inline-size);
    margin-inline: auto;
    padding-inline: var(--center-padding, var(--space-m));

    // スペーシングクラスを生成
    @include mix.spacing-classes("--center-padding", "padding");

    // バリアント
    &.intrinsic {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    &.center__text {
      text-align: center;
    }
  }
</style>
